name: Release

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'CHANGELOG.md'
      - 'package.json'
      - 'package-lock.json'

permissions:
  contents: write
  pull-requests: write

jobs:
  release:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'chore(release)')"
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linting and type checking
        run: npm run check

      - name: Build
        run: npm run build

      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Create Release
        run: npm run release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Push changes
        run: |
          git push --follow-tags origin main

      - name: Extract release notes
        id: extract_notes
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "tag=v$VERSION" >> $GITHUB_OUTPUT
          
          # Extract release notes from CHANGELOG.md for this version
          sed -n "/^## \[${VERSION}\]/,/^## \[/p" CHANGELOG.md | head -n -1 > release_notes.md
          
          # If no specific notes found, use a default message
          if [ ! -s release_notes.md ]; then
            echo "## Changes" > release_notes.md
            echo "See [CHANGELOG.md](./CHANGELOG.md) for detailed changes." >> release_notes.md
          fi

      - name: Create GitHub Release
        run: |
          gh release create ${{ steps.extract_notes.outputs.tag }} \
            --title "Release ${{ steps.extract_notes.outputs.tag }}" \
            --notes-file release_notes.md \
            --latest
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}