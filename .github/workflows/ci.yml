name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

permissions:
  contents: read

jobs:
  test:
    name: Test on Node ${{ matrix.node-version }} and ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        node-version: [22.x]
        os: [macos-latest]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linting
        run: npm run lint

      - name: Run type checking
        run: npm run typecheck

      - name: Run tests
        run: npm test

      - name: Build
        run: npm run build

      - name: Test CLI help (Unix)
        if: runner.os != 'Windows'
        run: node dist/index.js --help

      - name: Test CLI help (Windows)
        if: runner.os == 'Windows'
        run: node dist/index.js --help
        shell: cmd

  lint:
    name: Lint and Format Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Check formatting
        run: npx biome check ./src --formatter-enabled=true --linter-enabled=false --organize-imports-enabled=false

      - name: Run linting
        run: npx biome lint ./src

      - name: Type checking
        run: npm run typecheck

      - name: Check for unused dependencies
        run: npm run knip